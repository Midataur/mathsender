/* import the nice fonts */
@import url("https://rsms.me/inter/inter.css");

/*! minireset.css v0.0.6 | MIT License | github.com/jgthms/minireset.css */
html,
body,
p,
ol,
ul,
li,
dl,
dt,
dd,
blockquote,
figure,
fieldset,
legend,
textarea,
pre,
iframe,
hr,
h1,
h2,
h3,
h4,
h5,
h6 {
  margin: 0;
  padding: 0;
}
h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}
ul {
  list-style: none;
}
button,
input,
select,
textarea {
  margin: 0;
}
html {
  box-sizing: border-box;
}
*,
*::before,
*::after {
  box-sizing: inherit;
}
img,
video {
  height: auto;
  max-width: 100%;
}
iframe {
  border: 0;
}
table {
  border-collapse: collapse;
  border-spacing: 0;
}
td,
th {
  padding: 0;
}
td:not([align]),
th:not([align]) {
  text-align: left;
}

hr{
  display: block; height: 1px;
    border: 0; border-top: 1px solid var(--c-l-2);
}

/* a demo https://codepen.io/coolbezos_420/pen/jOqWBqL?editors=1100 */
/* reference for the css style, although, we use a slightly different version */
/* https://www.cutestrap.com/features/popsicle */
/* basically, you have blocks and popsicles, the block is the same thing as [B]EM, and the popsicle is the same thing as BE[M]
/* BEM to MSpopsicle: 
Blocks -> Blocks (.button)
Elements -> Elements (.button__icon)
Modifiers -> Popsicles (.button.-blue)
*/
/* this is a system that i like to work in, it makes modifying blocks simpler and nicer 
	keep in mind that this does mean that different blocks can have the same popsicle. 
	So maybe prefixing them might be a good idea
*/
/* variables */
:root {
  --mini-unit: 8px;
  /* colours */
  --c-clear: hsla(0, 0%, 0%, 0%);

  --c-yellow--darkest: hsl(49, 100%, 9%);
  --c-yellow--dark: hsl(49, 100%, 11%);
  --c-yellow: hsl(49, 100%, 50%);
  --c-yellow--light: hsl(49, 100%, 65%);

  --c-blue--darkest: hsl(190, 100%, 9%);
  --c-blue--dark: hsl(190, 100%, 11%);
  --c-blue: hsl(190, 100%, 50%);
  --c-blue--light: hsl(190, 100%, 65%);

  --c-l-10: hsl(240, 5%, 100%);
  --c-l-9: hsl(240, 5%, 91%);
  --c-l-8: hsl(240, 5%, 81%);
  --c-l-7: hsl(240, 5%, 71%);
  --c-l-6: hsl(240, 5%, 61%);
  --c-l-5: hsl(240, 5%, 51%);
  --c-l-4: hsl(240, 5%, 41%);
  --c-l-3: hsl(240, 5%, 31%);
  --c-l-2: hsl(240, 5%, 21%);
  --c-l-1: hsl(240, 5%, 16%);
  --c-l-0: hsl(240, 5%, 8%);
}

/* utils */
.--desktop{
  display: block;
}
.--mobile{
  display: none
}
@media (max-width: 670px) {
  .--desktop{ 
    display: none !important
  }
  .--mobile{
    display: block
  }
}

/* generic element styles */


html {
  font-family: "Inter", sans-serif;
}
@supports (font-variation-settings: normal) {
  html {
    font-family: "Inter var", sans-serif;
  }
}
html,
body {
  height: 100%;
  background-color: var(--c-l-0);
  color: var(--c-l-10);
}
body {
  font-size: 1.3em;
  font-weight: 300;
}
a {
  color: var(--c-l-10);
}
main {
  min-height: 85vh;
}

/* scrollbar 
::-webkit-scrollbar {
  width: 2px;
  height:2px
}

::-webkit-scrollbar-track {
  background: var(--c-yellow--dark); 
}
 
::-webkit-scrollbar-thumb {
  background: var(--c-yellow); 
} */
/* header block */
.header {
  display: flex;
  justify-content: space-between;
  padding: calc(var(--mini-unit) * 2) calc(var(--mini-unit) * 3);
  background-color: var(--c-l-0);
  color: var(--c-l-10);
  align-items: center;
}
@media (max-width: 600px) {
  .header {
    display: block;
    padding: calc(var(--mini-unit) * 2) calc(var(--mini-unit));

  }
  .header > * {
    margin-bottom:var(--mini-unit)
  }
  
}
.header.-sticky {
  position: sticky;
  top: 0;
  z-index: 10000;
}
.header-logo {
  transition: all 0.1s ease-in-out;
}
.header-logo:hover {
  opacity: 0.7;
}
.header-logo__img {
  height: calc(var(--mini-unit) * 4);
}
@media (max-width: 670px) {
  .header-logo__img {
    height: calc(var(--mini-unit) * 5);
  }
  .header-logo{
    padding-right: var(--mini-unit);
  }
}
.header-buttons-mobile>*{
  margin-bottom: var(--mini-unit);
}
/* button block */
.button {
  background-color: var(--c-l-2);
  color: var(--c-l-10);
  border-color: transparent;

  align-items: center;
  border-radius: var(--mini-unit);
  cursor: pointer;
  display: inline-flex;
  min-height: 2.5rem;
  justify-content: center;
  padding: 0 calc(var(--mini-unit) * 2);
  text-decoration: none;
  hyphens: auto;
  box-shadow: 0 1px 3px 0px rgba(0, 0, 0, 0.05);
  transition: box-shadow 0.1s ease-in-out 0s, border 0.1s, background-color 0.1s;
  font-weight: 700;
}
.button:hover {
  background-color: var(--c-l-1);
}
.button.-fill {
  width: 100%;
}
.button.-small {
  font-size: calc(var(--mini-unit) * 2);
  min-height: 2rem;
}
.button.-inverse {
  background-color: var(--c-l-10);

  color: var(--c-l-0);
}
.button.-inverse:hover {
  background-color: var(--c-l-8);
}
.button.-primary {
  background-color: var(--c-blue--dark);
  border-color: transparent;
  color: var(--c-blue);
}
.button.-primary:hover {
  background-color: var(--c-blue--darkest);
}
.button.-secondary {
  background-color: var(--c-yellow--dark);
  border-color: transparent;
  color: var(--c-yellow);
}
.button.-secondary:hover {
  background-color: var(--c-yellow--darkest);
}
.button.-math{
  padding-top:var(--mini-unit);
  padding-bottom: var(--mini-unit);
}
.button.-as-link{
    background: none!important;
    border: none;
    padding: 0!important;
    font-weight:500;
    /* text-decoration: underline; */
    cursor: pointer;
}
.-as-link:hover{
  opacity:0.8
}

.heading-container {
  display: flex;
  justify-content: space-between;
}

.export-icon {
  width: 30px;
  margin-left: 10px;
  vertical-align: middle;
}

/* change how the file input button looks like on browser != firefox/ie */
::-webkit-file-upload-button{
  background-color: var(--c-l-2);
  color: var(--c-l-10);
  border-color: transparent;

  align-items: center;
  border-radius: var(--mini-unit);
  cursor: pointer;
  display: inline-flex;
  justify-content: center;
  padding: 0 calc(var(--mini-unit) * 2);
  text-decoration: none;
  hyphens: auto;
  box-shadow: 0 1px 3px 0px rgba(0, 0, 0, 0.05);
  transition: box-shadow 0.1s ease-in-out 0s, border 0.1s, background-color 0.1s;
  font-weight: 700;
  margin-right:var(--mini-unit);
  font-size: calc(var(--mini-unit) * 2);
  min-height: 2rem;
}
::-webkit-file-upload-button:hover{
  background-color: var(--c-l-1);
}
/* fix wysiwyg problem */
.wysiwyg > a.button:hover {
  border-bottom: 0px solid !important;
}
/* button group block */
.button-group {
  display: flex;
  align-items: center;
  margin: calc(-1 * var(--mini-unit)) 0 0 calc(-1 * var(--mini-unit));
}
.button-group>*{
  margin: var(--mini-unit) 0 0 var(--mini-unit);
}
.button-group__button {
  margin-left: var(--mini-unit);
}
.button-group__button:first-child {
  margin-left: 0px;
}
@media (max-width: 670px) {
  .button-group__button {
    flex-grow: 1;
  }

}


/* main container block */
.container {
  width: 100%;
  margin: 0px auto;
  padding: var(--mini-unit);
  padding-top: calc(var(--mini-unit) * 4);
}
.container > * {
  margin-bottom: var(--mini-unit);
}
@media (min-width: 600px) {
  .container {
    max-width: 600px;
  }
}
@media (min-width: 900px) {
  .container {
    max-width: 900px;
  }
}

.questions > * {
  margin-bottom: var(--mini-unit);
}





/* the room code block */
.room-code {
  align-items: center;
  background-color: transparent;
  border: 1px solid hsl(190, 100%, 10%);
  border-radius: var(--mini-unit);
  color: var(--c-blue);
  display: inline-flex;
  font-size: calc(var(--mini-unit) * 2);
  min-height: 2rem;
  width: 200px;
  justify-content: center;
  padding: 0 calc(var(--mini-unit) * 2);
  text-decoration: none;
  hyphens: auto;
  box-shadow: 0 1px 3px 0px rgba(0, 0, 0, 0.05);
  font-weight: 700;
}
.room-code:hover{
  cursor: pointer;
}
.room-code:hover span{
  display: none;
}
.room-code:hover:after{
  content: "Click to copy";
}
.room-code.-fill{
  width:100%
}
.room-code.-copied{
  background-color: var(--c-blue--darkest);
}
.room-code.-copied span{
  font-size: 0;
}
.room-code.-copied:after{
  content: "Copied";
}

/* footer block */
.footer {
  text-align: center;
  font-size: 0.7em;
  padding-bottom: 1em;
}
.footer__a {
  opacity: 0.7;
}
.footer__a:hover {
  opacity: 0.5;
}

/* form code (stolen from cutestrap) */
/*
<form>
    <label class="field">
        <input type="text" />
        <span class="label">Name</span>
    </label>
    <label class="field -inline">
        <input type="radio" name="example" />
        <span class="label">Cone</span>
    </label>
    <label class="field -inline">
        <input type="radio" name="example" />
        <span class="label">Bowl</span>
    </label>
    <label for="select" class="field">
        <select name="select">
            <option disabled="disabled" selected="selected">Flavors</option>
            <option>Chocolate</option>
            <option>Vanilla</option>
        </select>
        <span class="label">Favorite Ice Cream</span>
    </label>
    <label class="field">
        <textarea></textarea>
        <span class="label">Comments</span>
    </label>
    <label class="field">
        <input type="checkbox" />
        <span class="label">
            I consent to my ice cream flavors being saved into a database for
            eternity and understand and acknowledge this will have consequences
            for all of my decendants for decades to come.
        </span>
    </label>
</form>
*/
.field {
    display: flex;
    margin-bottom: calc(var(--mini-unit) * 2);
    position: relative;
	text-align: left;
	
}
.form > .field:last-child {
  margin-bottom: 0px;
}
.field__label{
	margin-right: var(--mini-unit);
}
.field__input{
	background-color: var(--c-l-0);
    border: 1px solid var(--c-l-3);
    border-radius: var(--mini-unit);
    box-sizing: border-box;
    margin-top: calc(var(--mini-unit) * -1);
    padding: var(--mini-unit) var(--mini-unit);
    position: relative;
	width: 100%;
	color: var(--c-l-10);
	font-weight: 300;
	font-style: italic;
} 
.field__input:focus{
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  border-color: var(--c-l-4);
  outline: none !important;
}
.field__input.-primary{
	border-color: var(--c-blue--dark);
	color: var(--c-blue);
}
.field__input.-primary:focus{
  border-color: var(--c-l-4);

}
.field__input.-password{
  font-style:normal;
}

/* the twopart field*/
.twopart-field{
	display: flex;
  width:100%;
}
.twopart-field__left{
	border: 1px solid var(--c-l-3);

	border-radius: var(--mini-unit) 0px 0px var(--mini-unit);
	background-color: var(--c-l-3);
	padding: var(--mini-unit);
	margin-top: calc(var(--mini-unit) * -1);
	color: var(--c-l-10);
  font-weight: 600;
  align-items: center;
}
.twopart-field__left.-primary{
	border-color: var(--c-blue--dark);
	background-color:var(--c-blue--dark);
	color: var(--c-blue)
}
.twopart-field__right{
	border-radius: 0px var(--mini-unit) var(--mini-unit) 0px !important;
	flex-grow: 1;
	border-left:0px transparent !important
}
.twopart-field__right.-math{
  font-size:100%
}

/* text heading block */
.text-heading{
	font-weight: 700;
	font-size: 1.6em;
	margin-bottom: 0.875em;
	line-height: 1.1;
}
.text-heading.-sub{
  font-size: 1.2em;
	margin-bottom: 0.875em;
  line-height: 1.1;
  font-weight: 300;
}
.text-heading.-math{
  overflow-x:scroll;
  overflow-y:hidden;
  font-size:140%;
/*   scrollbar-color: var(--c-yellow) var(--c-yellow--dark);
  scrollbar-width: thin; */
}

.description {
  font-size: 0.8em;
  line-height: 1.1;
  font-weight: 600;
  color: var(--c-l-8);
}

/* some nice form blocks*/
.form {
  margin-bottom: calc(var(--mini-unit) * 3);
}
/* code to maybe get the input to be white on black */
#question-input .mq-matrixed {
  background: var(--c-l-1);
}
#question-input .mq-matrixed-container {
  filter: progid:DXImageTransform.Microsoft.Chroma(color='black');
}
.mq-cursor{
  border-left: 1px solid var(--c-l-10) !important;
}

.mq-editable-field.mq-focused,
.mq-math-mode .mq-editable-field.mq-focused {
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  border-color: var(--c-l-4);
  border-radius: var(--mini-unit)
}

.toast{
  display:none;

  border: 1px solid var(--c-l-5);
  padding: var(--mini-unit);
  font-size:calc(var(--mini-unit) * 2.5) ;
  border-radius: var(--mini-unit);
  padding-left:calc(var(--mini-unit) * 2) ;
  background-color: var(--c-l-0);
}
.toast.-warning{
  border-left:calc(var(--mini-unit) * 2) solid var(--c-yellow);
  border-color: var(--c-yellow);
}
.toast.-floating{
  position:fixed;
  bottom:calc(var(--mini-unit) * 4);
  right:calc(var(--mini-unit) * 4);
  width: min( 376px, 70vw );
}

.back-link{
  margin-bottom:calc(var(--mini-unit) * 2)
}

/* answer blocks for the [t]eacher scope */

.t-answer{
	border:2px solid var(--c-l-3);
	border-radius:var(--mini-unit);
	text-align:center;
	background-color: var(--c-l-3);
	margin-bottom:calc(var(--mini-unit) * 2)
}
.t-answer-user{
		padding:var(--mini-unit);
    font-weight:bold
}
.t-answer-bottom{
	padding:var(--mini-unit);
	
	background-color: var(--c-l-0);
	border-radius: 0px 0px var(--mini-unit) var(--mini-unit);
	color: var(--c-l-10)
}
.t-answer-text{
  padding:var(--mini-unit)
}
.t-answer.-correct{
		background-color: hsl(150, 60%, 16%);
		border-color: hsl(150, 60%, 16%);
		color: hsl(150, 100%, 50%);
	  
}
.t-answer.-incorrect{
		background-color: hsl(9, 60%, 20%);
		border-color: hsl(9, 60%, 20%);
		color: hsl(9, 100%, 60%);
}
.cross, .tick{
  display: inline-block;
  height: 20px;
  margin: 6px;
  
  opacity: 0.7;
  cursor: pointer;
}

.cross:hover, .tick:hover {
  opacity: 1;
  height: 26px;
  margin: 3px;
}

/* the text that indicates whether or not the student got it correct on the student view */
.s-marking-text{
  font-weight: 600;
}
.s-marking-text.-correct{
  color: hsl(150, 100%, 50%);
}
.s-marking-text.-incorrect{
  color: hsl(9, 100%, 60%);
}
.s-marking-text.-unmarked{
  color: var(--c-l-10)
}

.change-question-main{
  padding: calc(2 * var(--mini-unit));
  padding-bottom: 0px;
  padding-top: calc(4 * var(--mini-unit))
}

.summary-as-link {
  text-decoration: underline;
  cursor: pointer;
}

.summary-as-link:hover{
  opacity: 0.8;
}

.details{
  padding:calc(2 * var(--mini-unit));
 margin-bottom:calc(2 * var(--mini-unit));
 border:1px solid var(--c-l-2);
 border-radius:var(--mini-unit)
}
.details.-background{
  background-color: var(--c-l-0);
  border-radius: var(--mini-unit);
  border: 1px solid var(--c-l-2)
}

.details-content{
 padding-top:var(--mini-unit);

}
.details-content > * {
 margin-bottom: var(--mini-unit)
}

.details-form-container {
  padding-top: calc(2 * var(--mini-unit));
}

